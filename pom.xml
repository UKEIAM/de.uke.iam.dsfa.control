<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>war</packaging>

  <groupId>de.uke.iam.dsfa</groupId>
  <artifactId>control</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <parent>
    <artifactId>parent</artifactId>
    <groupId>de.uke.iam</groupId>
    <version>2.1.0-SNAPSHOT</version>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <skipTests>true</skipTests>
    <excludeResource/>
  </properties>

  <build>
    <finalName>control</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>${excludeResource}</exclude>
        </excludes>
      </resource>
    </resources>

  </build>

  <dependencies>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- REST SERVER START -->
    <!-- JSON -->
    <dependency>
      <groupId>de.uke.iam</groupId>
      <artifactId>lib-json</artifactId>
    </dependency>

    <!-- SWAGGER -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-core</artifactId>
    </dependency>

    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-models</artifactId>
    </dependency>

    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
    </dependency>

    <!-- Jersey -->
    <dependency>
      <artifactId>jersey-container-servlet</artifactId>
      <groupId>org.glassfish.jersey.containers</groupId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
    </dependency>
    <!-- REST SERVER END -->

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
      <scope>runtime</scope>
    </dependency>

  </dependencies>

  <profiles>
    <profile>
      <id>Exclude de.uke.iam.dsfa.control config</id>
      <properties>
        <excludeResource>de.uke.iam.dsfa.control.config.xml</excludeResource>
      </properties>
    </profile>


    <profile>
      <id>de.uke.iam.dsfa.control-dockerBuild</id>

      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/target</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/docker</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>prepare-package</id>
                <phase>package</phase>
                <inherited>false</inherited>
                <configuration>
                  <target>
                    <exec executable="docker">
                      <arg value="build" />
                      <arg value="-t" />
                      <arg value="${project.build.finalName}:${project.version}" />
                      <arg value="-f" />
                      <arg value="target/Dockerfile.docker" />
                      <arg value="target" />
                    </exec>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>de.uke.iam.dsfa.control-dockerRelease</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <phase>install</phase>
                <inherited>false</inherited>
                <configuration>
                  <target>
                    <exec executable="docker">
                      <arg value="tag" />
                      <arg value="${project.build.finalName}:${project.version}" />
                      <arg value="dockerreg.fordo.de/${project.build.finalName}:latest" />
                    </exec>
                    <exec executable="docker">
                      <arg value="push" />
                      <arg value="dockerreg.fordo.de/${project.build.finalName}:latest" />
                    </exec>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
